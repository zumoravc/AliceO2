<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$d8/dbd/structo2_1_1header_1_1BaseHeader.html" title="the base header struct Every header type must begin (i.e. derive) with this. Don&#39;t use this struct di..." alt="" coords="5,369,184,396"/>
<area shape="rect" id="node2" href="$d0/ddd/structo2_1_1cpv_1_1CPVBlockHeader.html" title="Header for CPV flagging the following CPV payload. " alt="" coords="253,5,438,32"/>
<area shape="rect" id="node3" href="$d3/d13/structo2_1_1emcal_1_1EMCALBlockHeader.html" title="Header for EMCAL flagging the following EMCAL payload. " alt="" coords="235,56,456,83"/>
<area shape="rect" id="node4" href="$d7/df0/structo2_1_1framework_1_1DataProcessingHeader.html" title="o2::framework::DataProcessing\lHeader" alt="" coords="232,107,459,149"/>
<area shape="rect" id="node5" href="$d2/d30/structo2_1_1framework_1_1DataSamplingHeader.html" title="o2::framework::DataSampling\lHeader" alt="" coords="237,173,454,214"/>
<area shape="rect" id="node6" href="$db/df3/structo2_1_1framework_1_1OutputObjHeader.html" title="O2 header for OutputObj metadata. " alt="" coords="250,238,441,279"/>
<area shape="rect" id="node7" href="$d0/d7a/structo2_1_1framework_1_1SourceInfoHeader.html" title="a BaseHeader with state information from the source " alt="" coords="248,303,443,345"/>
<area shape="rect" id="node8" href="$db/d87/structo2_1_1header_1_1DataHeader.html" title="the main header struct " alt="" coords="257,369,434,396"/>
<area shape="rect" id="node9" href="$d4/dfa/structo2_1_1header_1_1HeartbeatFrameEnvelope.html" title="o2::header::HeartbeatFrame\lEnvelope" alt="" coords="243,421,447,462"/>
<area shape="rect" id="node10" href="$d2/dda/structo2_1_1header_1_1NameHeader.html" title="an example data header containing a name of an object as a null terminated char arr. this is a template! at instantiation the template parameter determines the size of the held string array. a caveat with decoding is (if length of string is not known) you have to use header::get&lt;NameHeader&lt;0&gt;&gt;(buffer) to get it out of a buffer. May improve in the future if enough people complain. If the compiler decides to pad the end of struct, the length of padding is stored in the last byte " alt="" coords="233,487,458,513"/>
<area shape="rect" id="node11" href="$da/d75/structo2_1_1header_1_1test_1_1MetaHeader.html" title="o2::header::test::MetaHeader" alt="" coords="240,537,451,564"/>
<area shape="rect" id="node12" href="$d2/d84/structo2_1_1phos_1_1PHOSBlockHeader.html" title="Header for PHOS flagging the following PHOS payload. " alt="" coords="243,588,447,615"/>
<area shape="rect" id="node13" href="$d4/da3/structo2_1_1tpc_1_1TPCSectorHeader.html" title="o2::tpc::TPCSectorHeader" alt="" coords="252,639,439,665"/>
<area shape="rect" id="node14" href="$dc/d68/structtest_1_1MetaHeader.html" title="test::MetaHeader" alt="" coords="278,689,413,716"/>
</map>
