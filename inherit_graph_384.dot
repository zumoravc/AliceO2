digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node119 [label="true_type",height=0.2,width=0.4,color="grey75"];
  Node119 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="nlohmann::detail::conjunction\l\< is_complete_type\< CompatibleType\l \>, is_compatible_complete_type\l\< BasicJsonType, CompatibleType \> \>",height=0.2,width=0.4,color="black",URL="$dd/dde/structnlohmann_1_1detail_1_1conjunction.html"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="nlohmann::detail::is\l_compatible_type\< BasicJson\lType, CompatibleType \>",height=0.2,width=0.4,color="black",URL="$d3/d71/structnlohmann_1_1detail_1_1is__compatible__type.html"];
  Node119 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="nlohmann::detail::conjunction\l\<... \>",height=0.2,width=0.4,color="black",URL="$dd/dde/structnlohmann_1_1detail_1_1conjunction.html"];
  Node119 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="nlohmann::detail::is\l_basic_json\< NLOHMANN\l_BASIC_JSON_TPL \>",height=0.2,width=0.4,color="black",URL="$d8/d25/structnlohmann_1_1detail_1_1is__basic__json_3_01NLOHMANN__BASIC__JSON__TPL_01_4.html"];
  Node119 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="nlohmann::detail::is\l_complete_type\< T, decltype\l(void(sizeof(T)))\>",height=0.2,width=0.4,color="black",URL="$dd/dcd/structnlohmann_1_1detail_1_1is__complete__type_3_01T_00_01decltype_07void_07sizeof_07T_08_08_08_4.html"];
  Node119 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="o2::framework::has\l_root_dictionary\< T,\l std::conditional_t\<\l false, class_member_checker\l\< decltype(std::declval\< T\l \>().Class())\>, void \> \>",height=0.2,width=0.4,color="black",URL="$d0/d7f/structo2_1_1framework_1_1has__root__dictionary_3_01T_00_01std_1_1conditional__t_3_01false_00_01c3a7047afd30b3fd4df3d429b8c4e1a22.html"];
  Node119 -> Node126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="o2::framework::has\l_root_setowner\< T, std\l::conditional_t\< false,\l class_member_checker\<\l decltype(std::declval\<\l T \>().SetOwner(true))\>,\l void \> \>",height=0.2,width=0.4,color="black",URL="$da/d79/structo2_1_1framework_1_1has__root__setowner_3_01T_00_01std_1_1conditional__t_3_01false_00_01clab3eb568d3aa63dda30124b6acde88d98.html"];
  Node119 -> Node127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="o2::framework::is_boost\l_serializable_base\< Type,\l Archive, std::void_t\< decltype\l(std::declval\< Type & \>().serialize\l(std::declval\< Archive & \>(), 0))\> \>",height=0.2,width=0.4,color="black",URL="$da/da0/structo2_1_1framework_1_1is__boost__serializable__base_3_01Type_00_01Archive_00_01std_1_1void__td3dce5790dbc08a548e1efe654c16a22.html"];
  Node119 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="o2::framework::is_bounded\l_array\< std::array\< T, N \> \>",height=0.2,width=0.4,color="black",URL="$d5/d30/structo2_1_1framework_1_1is__bounded__array_3_01std_1_1array_3_01T_00_01N_01_4_01_4.html"];
  Node119 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="o2::framework::is_bounded\l_array\< T[N]\>",height=0.2,width=0.4,color="black",URL="$d1/d33/structo2_1_1framework_1_1is__bounded__array_3_01T[N]_4.html"];
  Node119 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="o2::framework::is_container\l\< T, std::conditional_t\l\< false, class_member_checker\l\< typename T::value_type, typename\l T::size_type, typename T::allocator\l_type, typename T::iterator, typename\l T::const_iterator, decltype(std::declval\l\< T \>().size()), decltype(std::declval\<\l T \>().begin()), decltype(std::declval\< T\l \>().end()), decltype(std::declval\< T \>().cbegin\l()), decltype(std::declval\< T \>().cend())\>, void \> \>",height=0.2,width=0.4,color="black",URL="$de/d5c/structo2_1_1framework_1_1is__container_3_01T_00_01std_1_1conditional__t_3_01false_00_01class__mef60b0640f3a7413451971b3764fe2133.html"];
  Node119 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="o2::framework::is_forced\l_non_messageable\< T, typename\l std::enable_if\< std::is_same\l\< typename T::non_messageable,\l MarkAsNonMessageable \>::value\l \>::type \>",height=0.2,width=0.4,color="black",URL="$df/ddf/structo2_1_1framework_1_1is__forced__non__messageable_3_01T_00_01typename_01std_1_1enable__if_3_9497e1cc58c5001cfb1a9a57a11a8068.html"];
  Node119 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="o2::framework::is_messageable\l\< o2::itsmft::Cluster \>",height=0.2,width=0.4,color="black",URL="$d2/dd2/structo2_1_1framework_1_1is__messageable_3_01o2_1_1itsmft_1_1Cluster_01_4.html"];
  Node119 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="o2::framework::is_messageable\l\< o2::mft::TrackMFT \>",height=0.2,width=0.4,color="black",URL="$dd/dc9/structo2_1_1framework_1_1is__messageable_3_01o2_1_1mft_1_1TrackMFT_01_4.html"];
  Node119 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="o2::framework::is_messageable\l\< o2::tof::Cluster \>",height=0.2,width=0.4,color="black",URL="$d5/d34/structo2_1_1framework_1_1is__messageable_3_01o2_1_1tof_1_1Cluster_01_4.html"];
  Node119 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="o2::framework::is_messageable\l\< o2::zdc::RecEvent \>",height=0.2,width=0.4,color="black",URL="$d2/dc9/structo2_1_1framework_1_1is__messageable_3_01o2_1_1zdc_1_1RecEvent_01_4.html"];
  Node119 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="o2::framework::is_specialization\l\< Ref\< Args... \>, Ref \>",height=0.2,width=0.4,color="black",URL="$d4/d04/structo2_1_1framework_1_1is__specialization_3_01Ref_3_01Args_8_8_8_01_4_00_01Ref_01_4.html"];
  Node119 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="o2::soa::is_index\<\l Ref\< Args... \>, Ref \>",height=0.2,width=0.4,color="black",URL="$db/d8e/structo2_1_1soa_1_1is__index_3_01Ref_3_01Args_8_8_8_01_4_00_01Ref_01_4.html"];
  Node119 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="std::is_trivially_copyable\l\< Point3D\< T \> \>",height=0.2,width=0.4,color="black",URL="$dc/d6e/structstd_1_1is__trivially__copyable_3_01Point3D_3_01T_01_4_01_4.html"];
}
