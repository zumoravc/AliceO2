digraph "o2::mft::GeometryTGeo"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{o2::mft::GeometryTGeo\n||+ GeometryTGeo()\l+ ~GeometryTGeo()\l+ GeometryTGeo()\l+ operator=()\l+ fillMatrixCache()\l+ Build()\l+ getSensorIndex()\l+ getLayer()\l+ getSensorID()\l+ getNumberOfSensorsPerLadder()\l+ getLadderID()\l+ Instance()\l+ adopt()\l+ getMFTVolPattern()\l+ getMFTHalfPattern()\l+ getMFTDiskPattern()\l+ getMFTLadderPattern()\l+ getMFTChipPattern()\l+ getMFTSensorPattern()\l# extractNumberOfHalves()\l# extractNumberOfDisks()\l# extractNumberOfLadders()\l# extractNumberOfLadders()\l# extractNumberOfSensorsPer\lLadder()\l# extractVolumeCopy()\l# extractMatrixSensor()\l# createT2LMatrix()\l# extractSensorXAlpha()\l# getHalf()\l# getDisk()\l# getLadder()\l# getFirstSensorIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{o2::itsmft::GeometryTGeo\n||+ GeometryTGeo()\l+ GeometryTGeo()\l+ operator=()\l+ GeometryTGeo()\l+ ~GeometryTGeo()\l+ getNumberOfChips()\l+ Build()\l# ClassDefOverride()\l}",height=0.2,width=0.4,color="black",URL="$d9/d02/classo2_1_1itsmft_1_1GeometryTGeo.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{o2::detectors::DetMatrix\lCache\n||+ DetMatrixCache()\l+ DetMatrixCache()\l+ ~DetMatrixCache()\l+ DetMatrixCache()\l+ operator=()\l+ getDetID()\l+ getName()\l+ getCacheT2L()\l+ getCacheT2G()\l+ getCacheL2G()\l+ getCacheT2GRot()\l+ getMatrixT2L()\l+ getMatrixT2G()\l+ getMatrixL2G()\l+ getMatrixT2GRot()\l+ isBuilt()\l+ getSize()\l+ fillMatrixCache()\l+ setSize()\l+ getCacheT2L()\l+ getCacheT2G()\l+ getCacheL2G()\l+ getCacheT2GRot()\l+ ClassDef()\l}",height=0.2,width=0.4,color="black",URL="$df/d06/classo2_1_1detectors_1_1DetMatrixCache.html"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +mDetID" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{o2::detectors::DetID\n|+ ITS\l+ TOF\l+ PHS\l+ CPV\l+ EMC\l+ HMP\l+ MFT\l+ MID\l+ Last\l|+ DetID()\l+ DetID()\l+ DetID()\l+ operator=()\l+ getID()\l+ getMask()\l+ getName()\l+ operator int()\l+ DetID()\l+ getNDetectors()\l+ getName()\l+ getMask()\l}",height=0.2,width=0.4,color="black",URL="$d6/dd5/classo2_1_1detectors_1_1DetID.html",tooltip="Static class with identifiers, bitmasks and names for ALICE detectors. "];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" +ACO\n+First\n+MCH\n+FV0\n+FT0\n+FDD\n+TRD\n+nDetectors\n+TPC\n+ZDC\n..." ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{static\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +mT2G\n+mT2L\n+mL2G" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{o2::detectors::MatrixCache\l\< o2::Transform3D \>\n||+ MatrixCache()\l+ MatrixCache()\l+ ~MatrixCache()\l+ operator=()\l+ setSize()\l+ getSize()\l+ setMatrix()\l+ getMatrix()\l+ isFilled()\l}",height=0.2,width=0.4,color="black",URL="$d4/daa/classo2_1_1detectors_1_1MatrixCache.html"];
  Node9 -> Node8 [dir="back",color="orange",fontsize="10",style="solid",label=" \< o2::Transform3D \>" ,fontname="Helvetica"];
  Node9 [label="{o2::detectors::MatrixCache\< T \>\n||+ MatrixCache()\l+ ~MatrixCache()\l+ MatrixCache()\l+ operator=()\l+ setSize()\l+ getSize()\l+ setMatrix()\l+ getMatrix()\l+ isFilled()\l}",height=0.2,width=0.4,color="black",URL="$d4/daa/classo2_1_1detectors_1_1MatrixCache.html",tooltip="MatrixCache is a vector of cached transform matrices (per sensor) for specific Transformation type..."];
  Node10 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +mSize" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node11 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +mT2GRot" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{o2::detectors::MatrixCache\l\< o2::Rotation2D \>\n||+ MatrixCache()\l+ MatrixCache()\l+ ~MatrixCache()\l+ operator=()\l+ setSize()\l+ getSize()\l+ setMatrix()\l+ getMatrix()\l+ isFilled()\l}",height=0.2,width=0.4,color="black",URL="$d4/daa/classo2_1_1detectors_1_1MatrixCache.html"];
  Node9 -> Node11 [dir="back",color="orange",fontsize="10",style="solid",label=" \< o2::Rotation2D \>" ,fontname="Helvetica"];
  Node12 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #mSensorIndexToLayer\n#mNumberOfSensorsPerDisk\n#mNumberOfLaddersPerDisk\n#mLastSensorIndex\n#mNumberOfDisks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{vector\< Int_t \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #mLayerMedianZ" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{vector\< Float_t \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node14 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #mNumberOfLadders\n#mLadderId2Index\n#mLadderIndex2Id" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{vector\< std::vector\l\< Int_t \> \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #sVolumeName\n#MinSensorsPerLadder\n#sChipName\n#sDiskName\n#MaxSensorsPerLadder\n#sLadderName\n#sHalfName\n#sSensorName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #mNumberOfHalves\n#mTotalNumberOfSensors" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{Int_t\n||}",height=0.2,width=0.4,color="grey75"];
}
