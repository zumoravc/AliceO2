digraph "o2::itsmft::Clusterer::ClustererThread"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{o2::itsmft::Clusterer\l::ClustererThread\n||+ resetColumn()\l+ swapColumnBuffers()\l+ expandPreCluster()\l+ addNewPrecluster()\l+ fetchMCLabels()\l+ initChip()\l+ updateChip()\l+ finishChip()\l+ finishChipSingleHitFast()\l+ process()\l+ ClustererThread()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +pixels" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{vector\< std::pair\<\l int, uint32_t \> \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +currCol" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{uint16_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +parent" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{o2::itsmft::Clusterer\n||+ Clusterer()\l+ ~Clusterer()\l+ Clusterer()\l+ operator=()\l+ process()\l+ setGeometry()\l+ isContinuousReadOut()\l+ setContinuousReadOut()\l+ getMaxBCSeparationToMask()\l+ setMaxBCSeparationToMask()\l+ getMaxRowColDiffToMask()\l+ setMaxRowColDiffToMask()\l+ setWantFullClusters()\l+ setWantCompactClusters()\l+ getWantFullClusters()\l+ getWantCompactClusters()\l+ print()\l+ clear()\l+ setNChips()\l+ loadDictionary()\l+ getTimer()\l+ getTimerMerge()\l}",height=0.2,width=0.4,color="black",URL="$d5/db8/classo2_1_1itsmft_1_1Clusterer.html"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +patterns" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{vector\< unsigned char \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +labels" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{o2::dataformats::MCTruth\lContainer\< o2::MCCompLabel \>\n||+ MCTruthContainer()\l+ MCTruthContainer()\l+ MCTruthContainer()\l+ MCTruthContainer()\l+ ~MCTruthContainer()\l+ operator=()\l+ operator=()\l+ getMCTruthHeader()\l+ getElement()\l+ getIndexedSize()\l+ getNElements()\l+ getLabels()\l+ getLabels()\l+ clear()\l+ addElement()\l+ addElements()\l+ addElements()\l+ addElementRandomAccess()\l+ setFrom()\l+ mergeAtBack()\l+ flatten_to()\l+ restore_from()\l+ print()\l+ inflate()\l+ deflate()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dc/daa/classo2_1_1dataformats_1_1MCTruthContainer.html"];
  Node7 -> Node6 [dir="back",color="orange",fontsize="10",style="solid",label=" \< o2::MCCompLabel \>" ,fontname="Helvetica"];
  Node7 [label="{o2::dataformats::MCTruth\lContainer\< TruthElement \>\n||+ MCTruthContainer()\l+ ~MCTruthContainer()\l+ MCTruthContainer()\l+ MCTruthContainer()\l+ MCTruthContainer()\l+ operator=()\l+ operator=()\l+ getMCTruthHeader()\l+ getElement()\l+ getIndexedSize()\l+ getNElements()\l+ getLabels()\l+ getLabels()\l+ clear()\l+ addElement()\l+ addElements()\l+ addElements()\l+ addElementRandomAccess()\l+ setFrom()\l+ mergeAtBack()\l+ flatten_to()\l+ restore_from()\l+ print()\l+ inflate()\l+ deflate()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dc/daa/classo2_1_1dataformats_1_1MCTruthContainer.html",tooltip="A container to hold and manage MC truth information/labels. "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +preClusterHeads\n+preClusterIndices" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{vector\< int \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +labelsBuff" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{array\< o2::MCCompLabel,\l Cluster::maxLabels \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node10 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +curr\n+prev\n+column1\n+column2" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +fullClusters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{vector\< Cluster \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node12 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +noLeftCol" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{bool\n||}",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +compClusters" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{vector\< CompClusterExt \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +SigmaY2\n+SigmaX2" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{static\n||}",height=0.2,width=0.4,color="grey75"];
  Node15 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +pixArrBuff" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{array\< o2::itsmft::\lPixelData, Cluster::\lkMaxPatternBits *2 \>\n||}",height=0.2,width=0.4,color="grey75"];
}
