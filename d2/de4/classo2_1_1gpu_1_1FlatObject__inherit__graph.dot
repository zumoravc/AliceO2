digraph "FlatObject"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{FlatObject\n||}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{o2::base::MatLayerCyl\n|+ binMin\l+ const\l+ const\l# const\l# dir\l# mNZBins\l# mNPhiBins\l# mNPhiSlices\l# mZHalf\l# mRMin2\l# mRMax2\l# mDZ\l# mDZInv\l# mDPhi\l# mDPhiInv\l# mPhiBin2Slice\l# mSliceCos\l# mSliceSin\l# mCells\l|+ MatLayerCyl()\l+ MatLayerCyl()\l+ ~MatLayerCyl()\l+ MatLayerCyl()\l+ initSegmentation()\l+ initSegmentation()\l+ populateFromTGeo()\l+ populateFromTGeo()\l+ print()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ getMeanRMS()\l+ cellsDiffer()\l+ canMergePhiSlices()\l+ optimizePhiSlices()\l+ flatten()\l+ estimateFlatBufferSize()\l+ fixPointers()\l+ setFlatPointer()\l+ estimateFlatBufferSize()\l+ getClassAlignmentBytes()\l+ getBufferAlignmentBytes()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# while()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d1/de6/classo2_1_1base_1_1MatLayerCyl.html"];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{o2::base::MatLayerCylSet\n|+ lmin\l+ const\l+ y0\l+ z0\l+ x1\l+ y1\l+ const\l+ low\l+ high\l|+ MatLayerCylSet()\l+ ~MatLayerCylSet()\l+ MatLayerCylSet()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ print()\l+ addLayer()\l+ populateFromTGeo()\l+ optimizePhiSlices()\l+ dumpToTree()\l+ writeToFile()\l+ flatten()\l+ getMatBudget()\l+ GPUd()\l+ GPUd()\l+ estimateFlatBufferSize()\l+ moveBufferTo()\l+ setActualBufferAddress()\l+ setFutureBufferAddress()\l+ cloneFromObject()\l+ fixPointers()\l+ fixPointers()\l+ ClassDefNV()\l+ loadFromFile()\l+ getClassAlignmentBytes()\l+ getBufferAlignmentBytes()\l}",height=0.2,width=0.4,color="black",URL="$dc/da6/classo2_1_1base_1_1MatLayerCylSet.html"];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{o2::trd::TRDGeometryFlat\n|+ mMatrixIndirection\l|+ TRDGeometryFlat()\l+ TRDGeometryFlat()\l+ TRDGeometryFlat()\l+ ~TRDGeometryFlat()\l}",height=0.2,width=0.4,color="black",URL="$d5/db3/classo2_1_1trd_1_1TRDGeometryFlat.html"];
}
