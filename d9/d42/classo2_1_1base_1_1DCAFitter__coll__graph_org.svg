<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: o2::base::DCAFitter Pages: 1 -->
<svg width="160pt" height="473pt"
 viewBox="0.00 0.00 160.00 473.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 469)">
<title>o2::base::DCAFitter</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<polygon fill="#bfbfbf" stroke="#000000" points="0,-.5 0,-464.5 152,-464.5 152,-.5 0,-.5"/>
<text text-anchor="middle" x="76" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">o2::base::DCAFitter</text>
<polyline fill="none" stroke="#000000" points="0,-445.5 152,-445.5 "/>
<text text-anchor="middle" x="76" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"> </text>
<polyline fill="none" stroke="#000000" points="0,-426.5 152,-426.5 "/>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ DCAFitter()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getMaxIter()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getMaxR()</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getMaxChi2()</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getMinParamChange()</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getBz()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getUseAbsDCA()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setMaxIter()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setMaxR()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setMaxChi2()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setBz()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setMinParamChange()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setMinRelChi2Change()</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ setUseAbsDCA()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ clear()</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ DCAFitter()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getNCandidates()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getPCACandidate()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getChi2AtPCACandidate()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getTrack0()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getTrack1()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ process()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ process()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ processCandidateDCA()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ processCandidateChi2()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ processAsIs()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getDistance2()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000">+ getDistance2()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcPCACoefs()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcPCA()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcPCA()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcChi2()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcDCA()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcDCA()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># calcResid()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># chi2Deriv()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># DCADeriv()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00" fill="#000000"># closerToAlternative()</text>
</g>
</g>
</svg>
