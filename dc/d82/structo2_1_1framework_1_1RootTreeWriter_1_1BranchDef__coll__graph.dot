digraph "o2::framework::RootTreeWriter::BranchDef&lt; T, KeyType, KeyExtractor &gt;"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node4 [label="{o2::framework::RootTreeWriter\l::BranchDef\< T, KeyType,\l KeyExtractor \>\n||+ BranchDef()\l+ BranchDef()\l+ BranchDef()\l+ init()\l+ assertNoMatchingType()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +keys" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{vector\< key_type \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +nofBranches" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{size_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +callback" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{variant\< std::monostate,\l Fill, FillExt, Spectator,\l SpectatorExt \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node8 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +branchName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node9 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +getName" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{function\< std::string\l(std::string, size_t)\>\n||}",height=0.2,width=0.4,color="grey75"];
  Node10 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +getIndex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{function\< size_t(o2\l::framework::DataRef\l const &)\>\n||}",height=0.2,width=0.4,color="grey75"];
}
