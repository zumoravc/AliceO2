digraph "GPUCA_NAMESPACE::gpu::GPUTrackingInputProvider"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{GPUCA_NAMESPACE::gpu\l::GPUTrackingInputProvider\n|+ mResourceZS\l+ mResourceClusterNativeAccess\l+ mResourceClusterNativeBuffer\l+ mResourceClusterNativeOutput\l+ mHoldTPCZS\l+ mHoldTPCClusterNative\l+ mHoldTPCClusterNativeOutput\l+ mNClusterNative\l+ mPzsMeta\l+ mPzsSizes\l+ mPzsPtrs\l+ mPclusterNativeAccess\l+ mPclusterNativeBuffer\l+ mPclusterNativeOutput\l|+ InitializeProcessor()\l+ RegisterMemoryAllocation()\l+ SetMaxData()\l+ SetPointersInputZS()\l+ SetPointersInputClusterNative\lAccess()\l+ SetPointersInputClusterNative\lBuffer()\l+ SetPointersInputClusterNative\lOutput()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{GPUCA_NAMESPACE::gpu\l::GPUProcessor\n|# mRec\l# mGPUProcessorType\l# mDeviceProcessor\l|+ GPUProcessor()\l+ ~GPUProcessor()\l+ GPUProcessor()\l+ operator=()\l+ GPUd()\l+ GPUd()\l+ GetRec()\l+ InitGPUProcessor()\l+ Clear()\l+ getAlignmentMod()\l+ getAlignment()\l+ nextMultipleOf()\l+ alignPointer()\l+ getAlignmentMod()\l+ getAlignment()\l+ getPointerWithAlignment()\l+ getPointerWithAlignment()\l+ computePointerWithAlignment()\l+ computePointerWithoutAlignment()\l# AllocateAndInitializeLate()\l# GPUconstantref()\l}",height=0.2,width=0.4,color="black",URL="$d0/dd7/classGPUCA__NAMESPACE_1_1gpu_1_1GPUProcessor.html"];
}
