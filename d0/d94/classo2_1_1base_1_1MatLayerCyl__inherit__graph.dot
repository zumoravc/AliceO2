digraph "o2::base::MatLayerCyl"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{o2::base::MatLayerCyl\n|+ binMin\l+ const\l+ const\l# const\l# dir\l# mNZBins\l# mNPhiBins\l# mNPhiSlices\l# mZHalf\l# mRMin2\l# mRMax2\l# mDZ\l# mDZInv\l# mDPhi\l# mDPhiInv\l# mPhiBin2Slice\l# mSliceCos\l# mSliceSin\l# mCells\l|+ MatLayerCyl()\l+ MatLayerCyl()\l+ ~MatLayerCyl()\l+ MatLayerCyl()\l+ initSegmentation()\l+ initSegmentation()\l+ populateFromTGeo()\l+ populateFromTGeo()\l+ print()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ GPUd()\l+ getMeanRMS()\l+ cellsDiffer()\l+ canMergePhiSlices()\l+ optimizePhiSlices()\l+ flatten()\l+ estimateFlatBufferSize()\l+ fixPointers()\l+ setFlatPointer()\l+ estimateFlatBufferSize()\l+ getClassAlignmentBytes()\l+ getBufferAlignmentBytes()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# GPUd()\l# while()\l# ClassDefNV()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{o2::gpu::FlatObject\n||}",height=0.2,width=0.4,color="black",URL="$d8/db1/classo2_1_1gpu_1_1FlatObject.html"];
}
