digraph "o2::base::DetImpl&lt; Det &gt;"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node19 [label="{o2::base::DetImpl\<\l Det \>\n||+ getHitBranchNames()\l+ updateHitTrackIndices()\l+ attachHits()\l+ mergeAndAdjustHits()\l+ mergeHitEntries()\l+ fillHitBranch()\l+ CloneModule()\l+ freeHitBuffers()\l+ setHits()\l+ createHitBuffers()\l+ initializeLate()\l+ BeginEvent()\l+ ~DetImpl()\l# ClassDefOverride()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node20 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{o2::base::Detector\n||+ Detector()\l+ Detector()\l+ ~Detector()\l+ Material()\l+ Mixture()\l+ Medium()\l+ SpecialCuts()\l+ SpecialCut()\l+ SpecialProcesses()\l+ SpecialProcess()\l+ Matrix()\l+ SetSpecialPhysicsCuts()\l+ addAlignableVolumes()\l+ defineWrapperVolume()\l+ setNumberOfWrapperVolumes()\l+ defineLayer()\l+ defineLayerTurbo()\l+ getMaterialID()\l+ getMediumID()\l+ getMediumIDMappingAsVector()\l+ addNameTo()\l+ getHitBranchNames()\l+ updateHitTrackIndices()\l+ attachHits()\l+ fillHitBranch()\l+ mergeHitEntries()\l+ InitializeO2Detector()\l+ Initialize()\l+ initializeLate()\l+ registerSensitiveVolumeAnd\lGetVolID()\l+ registerSensitiveVolumeAnd\lGetVolID()\l+ GetCollection()\l+ setDensityFactor()\l+ getDensityFactor()\l+ initFieldTrackingParams()\l# Detector()\l# operator=()\l}",height=0.2,width=0.4,color="black",URL="$d2/d00/classo2_1_1base_1_1Detector.html"];
  Node21 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node21 [label="{FairDetector\n||}",height=0.2,width=0.4,color="black",URL="$d6/d0c/classFairDetector.html"];
  Node22 -> Node19 [color="grey25",fontsize="10",style="solid",label=" #mCurrentBuffer\n#mInitialized" ,arrowhead="odiamond",fontname="Helvetica"];
  Node22 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
  Node23 -> Node19 [color="grey25",fontsize="10",style="solid",label=" #mCachedPtr" ,arrowhead="odiamond",fontname="Helvetica"];
  Node23 [label="{vector\< void * \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node24 -> Node19 [color="grey25",fontsize="10",style="solid",label=" #mShmBusy" ,arrowhead="odiamond",fontname="Helvetica"];
  Node24 [label="{bool\n||}",height=0.2,width=0.4,color="grey75"];
  Node25 -> Node19 [color="grey25",fontsize="10",style="solid",label=" #NHITBUFFERS" ,arrowhead="odiamond",fontname="Helvetica"];
  Node25 [label="{static\n||}",height=0.2,width=0.4,color="grey75"];
}
