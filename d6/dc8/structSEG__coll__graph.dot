digraph "SEG"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{SEG\n||}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +seg" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{o2::mch::mapping::Cathode\lSegmentation\n||+ CathodeSegmentation()\l+ operator==()\l+ operator!=()\l+ CathodeSegmentation()\l+ operator=()\l+ ~CathodeSegmentation()\l+ forEachDualSampa()\l+ isValid()\l+ findPadByPosition()\l+ findPadByFEE()\l+ padPositionX()\l+ padPositionY()\l+ padSizeX()\l+ padSizeY()\l+ padDualSampaId()\l+ padDualSampaChannel()\l+ padAsString()\l+ isBendingPlane()\l+ nofDualSampas()\l+ nofPads()\l+ dualSampaId()\l+ forEachPadInDualSampa()\l+ forEachPadInArea()\l+ forEachPad()\l+ forEachNeighbouringPad()\l* isValid()\l* findPadByPosition()\l* findPadByFEE()\l* padPositionX()\l* padPositionY()\l* padSizeX()\l* padSizeY()\l* padDualSampaId()\l* padDualSampaChannel()\l* padAsString()\l* isBendingPlane()\l* nofDualSampas()\l* nofPads()\l* dualSampaId()\l* forEachPadInDualSampa()\l* forEachPadInArea()\l* forEachPad()\l* forEachNeighbouringPad()\l}",height=0.2,width=0.4,color="black",URL="$d7/dd6/classo2_1_1mch_1_1mapping_1_1CathodeSegmentation.html",tooltip="A CathodeSegmentation lets you find pads on a given plane (cathode) of a detection element and then i..."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +seg" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{o2::itsmft::Segmentation\lAlpide\n|+ PassiveEdgeTop\l|+ SegmentationAlpide()\l+ ~SegmentationAlpide()\l+ ClassDefNV()\l+ localToDetector()\l+ localToDetectorUnchecked()\l+ detectorToLocal()\l+ detectorToLocal()\l+ detectorToLocal()\l+ detectorToLocalUnchecked()\l+ detectorToLocalUnchecked()\l+ detectorToLocalUnchecked()\l+ getFirstRowCoordinate()\l+ getFirstColCoordinate()\l+ print()\l}",height=0.2,width=0.4,color="black",URL="$dd/d50/classo2_1_1itsmft_1_1SegmentationAlpide.html"];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +SensorSizeRows\n+PitchRow\n+ActiveMatrixSizeCols\n+SensorSizeCols\n+PitchCol\n+SensorLayerThickness\lEff\n+PassiveEdgeSide\n+PassiveEdgeReadOut\n+ActiveMatrixSizeRows\n+SensorLayerThickness\n..." ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{float\n||}",height=0.2,width=0.4,color="black",URL="$d4/dc3/classfloat.html"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +NCols\n+NPixels\n+NRows" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
}
